{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a Home Service server.  You can find \nout more about us at api.services.com.br\n",
    "version" : "v1",
    "title" : "Home Services API",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/BraBatista/api.services.com.br/v1",
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  }, {
    "name" : "services",
    "description" : "Everything about your Services"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/categories" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Find all categories",
        "description" : "Returns all categories",
        "operationId" : "getCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AllCategories"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "categories" ],
        "summary" : "Add a new category",
        "operationId" : "addCategory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "category object that needs to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Category"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/categories/{categoryId}" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Find category by ID",
        "description" : "Returns a single category",
        "operationId" : "getCategoryById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "ID of category to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Category"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Category not found"
          }
        }
      },
      "put" : {
        "tags" : [ "categories" ],
        "summary" : "Update an existing category",
        "operationId" : "updateCategory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Category id to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Category object that needs to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Category"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Category not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "categories" ],
        "summary" : "Deletes a category",
        "operationId" : "deleteCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Service id to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Service not found"
          }
        }
      }
    },
    "/categories/{categoryId}/services" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Find all services from a category",
        "description" : "Returns all Services from especific category",
        "operationId" : "getServices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Service Category id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AllServices"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Add a new service",
        "operationId" : "addService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Service Category id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Service object that needs to be added to the Category",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Service"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/categories/{categoryId}/services/{serviceId}" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Returns a service from a category",
        "description" : "Returns a single services",
        "operationId" : "getServiceById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Service Category id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Category not found"
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "Update an existing service",
        "operationId" : "updateService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Service Category id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Service object that needs to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Service"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Service not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Deletes a service",
        "operationId" : "deleteService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "path",
          "description" : "Service Category id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Service not found"
          }
        }
      }
    },
    "/employees" : {
      "get" : {
        "tags" : [ "employees" ],
        "summary" : "Find all employess",
        "description" : "Returns all employess",
        "operationId" : "getEmployee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AllEmployees"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "categories" ],
        "summary" : "Add a new employee",
        "operationId" : "addEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "employee object that needs to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Category"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    }
  },
  "definitions" : {
    "AllCategories" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Category"
      }
    },
    "AllServices" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Service"
      }
    },
    "Category" : {
      "type" : "object",
      "properties" : {
        "idCategory" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nameCategory" : {
          "type" : "string"
        }
      }
    },
    "Service" : {
      "type" : "object",
      "required" : [ "nameService" ],
      "properties" : {
        "serviceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "category" : {
          "$ref" : "#/definitions/Category"
        },
        "nameService" : {
          "type" : "string",
          "example" : "Windows Washing"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "userType" : {
          "type" : "string"
        },
        "userStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User Type"
        }
      }
    },
    "Customer" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "pix" : {
          "type" : "string"
        }
      }
    },
    "Employee" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "services" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/definitions/Service"
            }, {
              "type" : "object",
              "properties" : {
                "serviceValue" : {
                  "type" : "number",
                  "format" : "double"
                }
              }
            }, {
              "type" : "object",
              "properties" : {
                "serviceTime" : {
                  "type" : "integer",
                  "format" : "int32",
                  "description" : "Service time in minutes"
                }
              }
            } ]
          }
        },
        "available" : {
          "type" : "boolean"
        }
      }
    },
    "AllEmployees" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Employee"
      }
    }
  }
}